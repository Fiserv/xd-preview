components:
  parameters:
    organizationId:
      description: An organization ID indicating the context for the operation. This is the organization for which data will be read/modified. When acting as an application (no user context), this parameter is used to imply a user/org context. When acting as a user, this parameter allows a user to manage a specific organization. When omitted, the context is assumed to be the authenticated user's organization.
      in: query
      name: organizationId
      schema:
        $ref: '#/components/schemas/organizationId'
    segmentId:
      description: A segment ID indicating the context for the operation. This is the segment for which data will be read/modified. When acting as an application (no user context), this parameter can be used to imply a segment context. When acting as a user, this allows a user to manage a specific segment. When omitted, the context is assumed to be the authenticated user's segment.
      in: query
      name: segmentId
      schema:
        $ref: '#/components/schemas/segmentId'
    tenantId:
      description: A tenant ID indicating the context for the operation. This is the tenant for which data will be read/modified. When acting as an application (no user context), this parameter can be used to imply a tenant context. When acting as a user, this allows a user to manage a specific tenant. When omitted, the context is assumed to be the authenticated user's tenant.
      in: query
      name: tenantId
      schema:
        $ref: '#/components/schemas/tenantId'
    userId:
      description: A user ID indicating the context for the operation. This is the user for which data will be read/modified. When acting as an application (no user context), this parameter can be used to imply a user context. When acting as a user, this allows a user to manage a specific user. When omitted, the context is assumed to be the authenticated user.
      in: query
      name: userId
      schema:
        $ref: '#/components/schemas/userId'
  responses:
    303seeOther:
      description: The requested operation is not allowed because the resource already exists. The server is redirecting the caller to the existing resource, as indicated by a URI in the Location header field.
    400badRequest:
      description: The request could not be processed by the server. This may be due to malformed syntax or a semantic error (e.g., they failed validation for length, range, etc.). Check your parameters and retry.
    401unauthorized:
      description: The client has not authenticated to perform the operation.
    403forbidden:
      description: The authenticated client is not authorized to perform the operation.
    404notFound:
      description: The server has not found a resource matching the request URI. The resource may no longer be available or the resource identifier(s) were incorrect.
    422unprocessableEntity:
      description: The parameters were syntactically correct, but they could not be processed by the server. Check your parameters and try again.
  schemas:
    amount:
      additionalProperties: false
      description: The amount of money associated with a balance or transaction.
      properties:
        currency:
          $ref: '#/components/schemas/currencyCode'
        value:
          description: A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.
          example: 1000
          type: number
      required:
        - currency
        - value
      type: object
    compositeEntitlement:
      allOf:
        - $ref: '#/components/schemas/entitlementPatch'
        - description: A composite entitlement is the unified set of entitlements for multiple levels for simplified query and evaluation.
          properties:
            id:
              description: 'The ID of the entitlement in the format: QuickHash({method}{Regex.Replace(route, @"[^a-zA-Z0-9]", "-")}{userId}{type}).'
              example: E2A6A77741910D7FC1302EC3E1F4D866DCE49CB6C42126E8B02F40CD19D23CAF
              type: string
            scope:
              description: The level at which the entitlement takes effect.
              example: user
              type: string
            segmentId:
              $ref: '#/components/schemas/segmentId'
            type:
              allOf:
                - $ref: '#/components/schemas/entitlementType'
              description: Indicates the type of entitlement it is, see enum for possible values.
              example: composite
            userId:
              $ref: '#/components/schemas/userId'
          type: object
      description: A user-level entitlement with an associated ID.
      required:
        - id
      type: object
    currencyCode:
      description: ISO 4217 currency code.
      example: USD
      pattern: ^[A-Z]{3,3}$
      type: string
    endpointCatalog:
      description: The endpoint catalog comprised of array of entries.
      items:
        $ref: '#/components/schemas/endpointCatalogEntry'
      type: array
    endpointCatalogEntry:
      description: An endpoint catalog entry.
      properties:
        active:
          description: 'Indicating whether the endpoint entry is active or not, new entries are added as `active: false` and needs to subsequently be promoted to `active: true`.'
          example: true
          type: boolean
        method:
          anyOf:
            - $ref: '#/components/schemas/method'
          description: The HTTP method associated with the request/endpoint.
        route:
          description: The route associated with the request/endpoint.
          example: /consumer/banking/v1/transfers
          type: string
      required:
        - active
        - method
        - route
      type: object
    endpointCatalogEntryBase:
      description: An endpoint catalog entry.
      properties:
        service:
          description: The service that's part of this release.
          example: banking-transfer
          type: string
        version:
          description: A unique version that this service release belongs to; example given is a git commit hash.
          example: 71e01e0b6bdc2f7e29c1f986113845c36f211372
          type: string
      required:
        - service
        - version
      type: object
    endpointCatalogEntrySchema:
      anyOf:
        - $ref: '#/components/schemas/endpointCatalogEntryBase'
        - description: The OpenAPI schema content associated with the catalog entry.
          properties:
            schema:
              description: The OpenAPI schema file encoded as base64.
              example: eyAiZXhhbXBsZSI6IHRydWUgfQ==
              type: string
          type: object
      description: An endpoint catalog entry.
      required:
        - schema
        - service
        - version
      type: object
    entitlementPatch:
      description: Properties that can be updated on an entitlement.
      properties:
        allow:
          description: Indicates whether the entitlement, when the criteria are met, allows or denies access.
          example: true
          type: boolean
        description:
          description: Human-readable text that explains the purpose of the entitlement. This may be used in UI to help entitlement management but is not localized.
          example: Transfer Limits
          type: string
        limitGroups:
          description: The set of limits associated with the entitlement.
          items:
            $ref: '#/components/schemas/limitGroup'
          type: array
        method:
          $ref: '#/components/schemas/method'
        name:
          description: A short name for the entitlement. This may be used in UI to help entitlement management but is not localized.
          example: System Transfer Limit
          type: string
        request:
          description: Restrictions that can match and be evaluated against aspects of the inbound request.
          example:
            - conditions:
                and:
                  - name: transfer.type
                    operator: in
                    target: fields
                    values:
                      - PPD
              validations:
                - name: transfer.amount
                  operator: range
                  range:
                    max: 1000
                  target: fields
            - validations:
                - name: amount.value
                  operator: required
                  target: fields
                  value: 'true'
          items:
            $ref: '#/components/schemas/restriction'
          type: array
        route:
          description: The route pattern that matches the request path with which the entitlement is associated.
          example: /consumer/banking/v1/transfers
          format: path
          type: string
        scope:
          description: The level at which the entitlement takes effect.
          enum:
            - system
            - tenant
            - segment
            - organization
            - user
          example: system
          type: string
        type:
          allOf:
            - $ref: '#/components/schemas/entitlementType'
          description: Indicates the type of entitlement it is, see enum for possible values.
          example: entitlement
      type: object
    entitlementSet:
      description: An entitlement set containing one or more user ID references and one or more entitlement references.
      properties:
        description:
          description: Human-readable text that explains the purpose of the entitlement set. This may be used in UI to help entitlement management but is not localized.
          example: Helpful text explaining the purpose of this policy.
          type: string
        entitlements:
          description: An array of entitlement IDs that makes up the entitlement set.
          example:
            - 7c2cbc3a-115d-468c-845e-e859b1135c2a
          items:
            description: An individual entitlement ID.
            type: string
          type: array
        name:
          description: A short name for the entitlement set. This may be used in UI to help entitlement management but is not localized.
          example: XYZ Corp Custom Policy
          type: string
        organizationId:
          $ref: '#/components/schemas/organizationId'
        type:
          allOf:
            - $ref: '#/components/schemas/entitlementType'
          description: Indicates the type of entitlement it is, see enum for possible values.
          example: entitlementSet
        users:
          description: An array of user IDs to which the entitlement set applies.
          items:
            $ref: '#/components/schemas/userId'
          type: array
      type: object
    entitlementSetArray:
      description: An array of entitlement sets.
      items:
        $ref: '#/components/schemas/entitlementSetWithId'
      type: array
    entitlementSetWithId:
      allOf:
        - $ref: '#/components/schemas/entitlementSet'
        - description: Adds the ID to the entitlement set.
          properties:
            id:
              description: The ID of the entitlement set.
              example: ffa5e183-94ec-4419-84e2-9919b5fc6763
              format: guid
              type: string
          type: object
      description: An entitlement set with an associated ID.
      type: object
    entitlementType:
      description: Indicates which type of entitlement it is. `entitlement` for regular entitlement, and `entitlementset` for entitlements that are part of an entitlement set.
      enum:
        - composite
        - entitlement
        - entitlementSet
        - entitlementSetMember
      type: string
    frequency:
      description: The amount of time associated with the limit. For example, if the value is 'daily' then the limit amount applies to a 24-hour period.
      enum:
        - daily
        - weekly
        - monthly
        - quarterly
        - yearly
        - settlementDay
        - perOccurrence
        - perBatch
      example: daily
      type: string
    jsonPatchDocument:
      description: RFC 6902 JSON Patch document - http://json.schemastore.org/json-patch.
      items:
        oneOf:
          - additionalProperties: false
            description: Add, replace, or test operations.
            properties:
              op:
                description: The operation to perform.
                enum:
                  - add
                  - replace
                  - test
                type: string
              path:
                $ref: '#/components/schemas/jsonPatchPath'
              value:
                description: The value to add, replace, or test.
            required:
              - op
              - path
              - value
            type: object
          - additionalProperties: false
            description: Remove operation.
            properties:
              op:
                description: The operation to perform.
                enum:
                  - remove
                type: string
              path:
                $ref: '#/components/schemas/jsonPatchPath'
            required:
              - op
              - path
            type: object
          - additionalProperties: false
            description: Copy and move operations.
            properties:
              from:
                $ref: '#/components/schemas/jsonPatchPath'
              op:
                description: The operation to perform.
                enum:
                  - copy
                  - move
                type: string
              path:
                $ref: '#/components/schemas/jsonPatchPath'
            required:
              - from
              - op
              - path
            type: object
      type: array
    jsonPatchPath:
      description: A JSON Pointer path pointing to the location of the patch operation.
      type: string
    limit:
      description: Criteria defining a transaction limit within a given period of time.
      properties:
        conditions:
          description: Contains the collection of conditions that must be met in order for the rule to be applied.
          properties:
            and:
              description: The set of conditions that must all be met for the rule to be applied.
              items:
                $ref: '#/components/schemas/operator'
              type: array
            or:
              description: The set of conditions where at least one must be met for the rule to be applied.
              items:
                $ref: '#/components/schemas/operator'
              type: array
          type: object
        period:
          $ref: '#/components/schemas/frequency'
        rules:
          description: The set of rules associated with the limit.
          items:
            $ref: '#/components/schemas/rule'
          type: array
      type: object
    limitGroup:
      description: Criteria defining a transaction limit within a given period of time.
      example:
        limits:
          - conditions:
              and:
                - name: transfer.type
                  operator: in
                  values:
                    - PPD
            period: daily
            rules:
              - aggregator: sum
                amount:
                  currency: USD
                  value: 500
                name: amount
          - conditions:
              and:
                - name: transfer.Type
                  operator: in
                  values:
                    - CCD
                    - CTX
                    - RCK
                    - IAT
            period: daily
            rules:
              - aggregator: sum
                amount:
                  currency: USD
                  value: 1000
                name: amount
              - aggregator: count
                name: noOfTransfers
                value: 100
        scheme: transfer
      properties:
        limits:
          description: The set of limits associated with the group.
          items:
            $ref: '#/components/schemas/limit'
          type: array
        scheme:
          description: Defines which strong type/structure the limit takes. This allows service-specific limit structures to be defined and evaluated.
          example: transfer
          type: string
      required:
        - scheme
      type: object
    method:
      description: The HTTP method associated with the request. Used to differentiate entitlements on a per-endpoint basis.
      enum:
        - CONNECT
        - DELETE
        - GET
        - HEAD
        - OPTIONS
        - PATCH
        - POST
        - PUT
        - TRACE
      example: POST
      type: string
    operator:
      description: Operator for restrictions and conditions.
      properties:
        name:
          description: The name of the field, header or parameter the operator should be applied to.
          example: transfer.amount
          type: string
        operator:
          description: The validation operation you want to perform.
          enum:
            - equals
            - range
            - in
            - required
          example: range
          type: string
        range:
          description: Defines the number range that the value being validated should fall within.
          properties:
            max:
              description: The maximum value for the range. Either 'min' or 'max' must be defined, but not necessarily both.
              example: 1000
              type: number
            min:
              description: The minimum value for the range. Either 'min' or 'max' must be defined, but not necessarily both.
              example: 100
              type: number
          type: object
        target:
          description: Indicates whether the validation applies to fields (body), query parameters, positional parameters (path) or the request headers.
          enum:
            - fields
            - headers
            - query
            - path
          example: fields
          type: string
        value:
          description: Single value used for comparison in combination with a compatible operator.
          example: 'true'
          type: string
        values:
          description: Array of values used for comparison in combination with a compatible operator.
          example:
            - Test-Group
          items:
            type: string
          type: array
      required:
        - name
        - operator
      type: object
    organizationEntitlement:
      allOf:
        - $ref: '#/components/schemas/entitlementPatch'
        - description: An entitlement associated with an organization.
          properties:
            organizationId:
              $ref: '#/components/schemas/organizationId'
            scope:
              description: The level at which the entitlement takes effect. For an organization entitlement this is always 'organization'.
              example: organization
              type: string
          type: object
      description: An entitlement set at the organization level.
      required:
        - allow
        - method
        - route
        - scope
        - organizationId
        - type
      type: object
    organizationEntitlementWithId:
      allOf:
        - $ref: '#/components/schemas/organizationEntitlement'
        - description: This schema adds the ID to the entitlement.
          properties:
            id:
              description: 'The ID of the entitlement in the format: QuickHash({method}{Regex.Replace(route, @"[^a-zA-Z0-9]", "-")}{organizationId}{type}).'
              example: E2A6A77741910D7FC1302EC3E1F4D866DCE49CB6C42126E8B02F40CD19D23CAF
              type: string
          type: object
      description: An organization-level entitlement with an associated ID.
      required:
        - id
      type: object
    organizationId:
      description: A unique and immutable identifier used to identify the organization that this entity is associated with.
      example: 06d3b551-e595-4f16-867e-601d84080768
      maxLength: 40
      minLength: 1
      type: string
    restriction:
      description: Criteria that are used to compare against a target value and determine if an action is allowed or denied.
      properties:
        conditions:
          description: Contains the collection of conditions that must be met in order for the validation to happen.
          properties:
            and:
              description: The set of conditions that must all be met for the rule to be applied.
              items:
                $ref: '#/components/schemas/operator'
              type: array
            or:
              description: The set of conditions where at least one must be met for the rule to be applied.
              items:
                $ref: '#/components/schemas/operator'
              type: array
          type: object
        validations:
          description: Contains the collection of validations that must validate in order for the request to be authorized.
          items:
            $ref: '#/components/schemas/operator'
          type: array
      type: object
    rule:
      description: An individual transaction limit rule that indicates a method for calculating the limit and the extent to which it applies.
      properties:
        aggregator:
          description: Specifies the aggregate function to perform.
          example: count
          type: string
        amount:
          $ref: '#/components/schemas/amount'
        name:
          description: Unique identifier for the particular limit rule.
          example: noOfTransfers
          type: string
        value:
          description: Used for non-monetary values in combination with a compatible aggregate function.
          example: 100
          type: number
      type: object
    segmentEntitlement:
      allOf:
        - $ref: '#/components/schemas/entitlementPatch'
        - description: This schema adds the segment ID to the entitlement.
          properties:
            scope:
              description: The level at which the entitlement takes effect. For a segment entitlement this is always 'segment'.
              example: segment
              type: string
            segmentId:
              $ref: '#/components/schemas/segmentId'
          type: object
      description: An entitlement set at the segment level.
      required:
        - allow
        - method
        - route
        - scope
        - segmentId
        - type
      type: object
    segmentEntitlementWithId:
      allOf:
        - $ref: '#/components/schemas/segmentEntitlement'
        - description: This schema adds the ID to the entitlement.
          properties:
            id:
              description: 'The ID of the entitlement in the format: QuickHash({method}{Regex.Replace(route, @"[^a-zA-Z0-9]", "-")}{segmentId}{type}).'
              example: E2A6A77741910D7FC1302EC3E1F4D866DCE49CB6C42126E8B02F40CD19D23CAF
              type: string
          type: object
      description: A segment-level entitlement with an associated ID.
      required:
        - id
      type: object
    segmentId:
      description: A unique and immutable identifier used to identify a segment resource.
      example: 06d3b551-e595-4f16-867e-601d84080768
      maxLength: 40
      minLength: 1
      type: string
    systemEntitlement:
      allOf:
        - $ref: '#/components/schemas/entitlementPatch'
      description: An entitlement set at the system level.
      required:
        - allow
        - method
        - route
        - scope
        - type
      type: object
    systemEntitlementWithId:
      allOf:
        - $ref: '#/components/schemas/systemEntitlement'
        - description: This schema adds the ID to the entitlement.
          properties:
            id:
              description: 'The ID of the entitlement in the format: QuickHash({method}{Regex.Replace(route, @"[^a-zA-Z0-9]", "-")}{type}).'
              example: BED6ED6145D58CDDAF9D7EA6B3DAA058FCEB56D3B47A2F1AF18EB40945F8603C
              type: string
          type: object
      description: A system-level entitlement with an associated ID.
      required:
        - id
      type: object
    tenantEntitlement:
      allOf:
        - $ref: '#/components/schemas/entitlementPatch'
        - description: This schema adds the tenant ID to the entitlement.
          properties:
            scope:
              description: The level at which the entitlement takes effect. For a tenant entitlement this is always 'tenant'.
              example: tenant
              type: string
            tenantId:
              $ref: '#/components/schemas/tenantId'
          type: object
      description: An entitlement set at the tenant level.
      required:
        - allow
        - method
        - route
        - scope
        - tenantId
        - type
      type: object
    tenantEntitlementWithId:
      allOf:
        - $ref: '#/components/schemas/tenantEntitlement'
        - description: This schema adds the ID to the entitlement.
          properties:
            id:
              description: 'The ID of the entitlement in the format: QuickHash({method}{Regex.Replace(route, @"[^a-zA-Z0-9]", "-")}{tenantId}{type}).'
              example: E2A6A77741910D7FC1302EC3E1F4D866DCE49CB6C42126E8B02F40CD19D23CAF
              type: string
          type: object
      description: A tenant-level entitlement with an associated ID.
      required:
        - id
      type: object
    tenantId:
      description: A unique and immutable identifier used to identify a tenant resource.
      example: ffa5e183-94ec-4419-84e2-9919b5fc6763
      maxLength: 40
      minLength: 1
      type: string
    userEntitlement:
      allOf:
        - $ref: '#/components/schemas/entitlementPatch'
        - description: This schema adds the user ID to the entitlement.
          properties:
            scope:
              description: The level at which the entitlement takes effect. For a user entitlement this is always 'user'.
              example: user
              type: string
            userId:
              $ref: '#/components/schemas/userId'
          type: object
      description: An entitlement at the user level.
      required:
        - allow
        - method
        - route
        - scope
        - userId
        - type
      type: object
    userEntitlementWithId:
      allOf:
        - $ref: '#/components/schemas/userEntitlement'
        - description: This schema adds the ID to the entitlement.
          properties:
            id:
              description: 'The ID of the entitlement in the format: QuickHash({method}{Regex.Replace(route, @"[^a-zA-Z0-9]", "-")}{userId}{type}).'
              example: E2A6A77741910D7FC1302EC3E1F4D866DCE49CB6C42126E8B02F40CD19D23CAF
              type: string
          type: object
      description: A user-level entitlement with an associated ID.
      required:
        - id
      type: object
    userId:
      description: A unique and immutable identifier used to identify the user that this entity is associated with.
      example: ffa5e183-94ec-4419-84e2-9919b5fc6763
      maxLength: 40
      minLength: 1
      type: string
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      description: DBP normalized JWT.
      scheme: bearer
      type: http
info:
  contact:
    email: support@fiserv.com
    name: Fiserv
    url: https://fiserv.com
  description: Routes for managing entitlements.
  title: 'Risk: Entitlements'
  version: v1
openapi: 3.0.3
paths:
  /consumer/risk/v1/entitlements/endpoints:
    get:
      description: Retrieves the endpoint catalog.
      operationId: get-consumer-risk-entitlements-endpoints
      parameters:
        - description: An optional OData (https://www.odata.org/odata-services/) query for searching/filtering endpoint catalog entries.
          examples:
            activeExactMatchFilter:
              value: active eq true
            methodFilter:
              value: method eq POST
            routeContainsFilter:
              value: contains(route, transfer)
            routeEndsWithFilter:
              value: endswith(route, /transfers)
            routeExactMatchFilter:
              value: route eq /consumer/banking/v1/transfers
            routeStartsWithFilter:
              value: startswith(route, /consumer/banking)
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to skip specified number (n) of entries from the collection of endpoint catalog entries and selecting only the remaining entries (starting with entry n+1). If a value less than zero is specified, the URI would be considered malformed.
          example: 10
          in: query
          name: $skip
          required: false
          schema:
            default: 0
            type: integer
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to select only a subset (first n) of entries from the collection of endpoint catalog entries. If a value less than zero is specified, the URI would be considered malformed.
          example: 25
          in: query
          name: $top
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/endpointCatalog'
          description: Successfully retrieved the endpoint catalog.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-consumer
        - resource-entitlements
  /consumer/risk/v1/entitlements/entitlementSet:
    get:
      description: Gets all existing entitlement sets for the organization.
      operationId: get-consumer-risk-entitlements-entitlement-set
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - description: An optional OData (https://www.odata.org/odata-services/) query for searching/filtering entitlement sets.
          examples:
            nameContainsFilter:
              value: contains(name, 'XYZ Corp')
            nameEndsWithFilter:
              value: endswith(name, Custom Entitlement)
            nameExactMatchFilter:
              value: id eq XYZ Corp Custom Entitlement
            nameStartsWithFilter:
              value: startswith(name, 'XYZ Corp')
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to skip specified number (n) of entries from the collection of entitlement sets and selecting only the remaining entries (starting with entry n+1). If a value less than zero is specified, the URI would be considered malformed.
          example: 10
          in: query
          name: $skip
          required: false
          schema:
            default: 0
            type: integer
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to select only a subset (first n) of entries from the collection of entitlement sets. If a value less than zero is specified, the URI would be considered malformed.
          example: 25
          in: query
          name: $top
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitlementSetArray'
          description: Successfully retrieved the list of entitlement sets.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-consumer
        - resource-entitlements
      x-proxy-name: Entitlement Set
    post:
      description: Adds an entitlement set.
      operationId: post-consumer-risk-entitlements-entitlement-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entitlementSet'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitlementSetWithId'
          description: Successfully created the entitlement set.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-consumer
        - resource-entitlements
  /consumer/risk/v1/entitlements/entitlementSet/{id}:
    delete:
      description: Deletes an existing entitlement set.
      operationId: delete-consumer-risk-entitlements-entitlement-set-by-id
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - description: The ID of the entitlement set to delete.
          in: path
          name: id
          required: true
          schema:
            format: guid
            type: string
      responses:
        '204':
          description: Successfully deleted the entitlement set.
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
      tags:
        - context-risk
        - party-consumer
        - resource-entitlements
    get:
      description: Gets an existing entitlement set.
      operationId: get-consumer-risk-entitlements-entitlement-set-by-id
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - description: The ID of the entitlement set to get.
          in: path
          name: id
          required: true
          schema:
            format: guid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitlementSetWithId'
          description: Successfully retrieved the entitlement set.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
      tags:
        - context-risk
        - party-consumer
        - resource-entitlements
    patch:
      description: Updates an existing entitlement set.
      operationId: patch-consumer-risk-entitlements-entitlement-set-by-id
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - description: The ID of the entitlement set to update.
          in: path
          name: id
          required: true
          schema:
            format: guid
            type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              entitlementAddUserReplace:
                description: Add an entitlement reference and replace a user reference.
                value:
                  - op: add
                    path: /entitlements/-
                    value: 4e10fb44-799a-4cdf-be1e-856176120b0c
                  - op: replace
                    path: /users/2
                    value: ffa5e183-94ec-4419-84e2-9919b5fc6765
            schema:
              $ref: '#/components/schemas/jsonPatchDocument'
          application/merge-patch+json:
            examples:
              entitlementAddUserReplace:
                description: Add an entitlement reference and replace a user reference.
                value:
                  entitlements:
                    - 4e10fb44-799a-4cdf-be1e-856176120b0c
                    - ffa5e183-94ec-4419-84e2-9919b5fc6765
                  users:
                    - a2414ff7-ba76-4cec-9c7e-6f32ec2202a4
                    - ffa5e183-94ec-4419-84e2-9919b5fc6763
            schema:
              $ref: '#/components/schemas/entitlementSet'
      responses:
        '204':
          description: Successfully updated the entitlement set.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-consumer
        - resource-entitlements
  /consumer/risk/v1/entitlements/user:
    get:
      description: Gets all existing entitlements on the user level.
      operationId: get-consumer-risk-entitlements-user
      parameters:
        - $ref: '#/components/parameters/userId'
        - description: An optional OData (https://www.odata.org/odata-services/) query for searching/filtering entitlements.
          examples:
            allowFilter:
              value: allow eq true
            methodFilter:
              value: method eq POST
            nameContainsFilter:
              value: contains(name, 'XYZ Corp')
            nameEndsWithFilter:
              value: endswith(name, Custom Entitlement)
            nameExactMatchFilter:
              value: id eq XYZ Corp Custom Entitlement
            nameStartsWithFilter:
              value: startswith(name, 'XYZ Corp')
            routeContainsFilter:
              value: contains(route, transfer)
            routeEndsWithFilter:
              value: endswith(route, /transfers)
            routeExactMatchFilter:
              value: route eq /consumer/banking/v1/transfers
            routeStartsWithFilter:
              value: startswith(route, /consumer/banking)
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to skip specified number (n) of entries from the collection of entitlements and selecting only the remaining entries (starting with entry n+1). If a value less than zero is specified, the URI would be considered malformed.
          example: 10
          in: query
          name: $skip
          required: false
          schema:
            default: 0
            type: integer
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to select only a subset (first n) of entitlement entries from the collection of entitlements. If a value less than zero is specified, the URI would be considered malformed.
          example: 25
          in: query
          name: $top
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/userEntitlementWithId'
                type: array
          description: Successfully retrieved the list of entitlements.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-consumer
        - resource-entitlements
      x-proxy-name: User Entitlement 
    post:
      description: Adds an entitlement on the user level.
      operationId: post-consumer-risk-entitlements-user
      parameters:
        - $ref: '#/components/parameters/organizationId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userEntitlement'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userEntitlementWithId'
          description: Successfully created the entitlement.
        '303':
          $ref: '#/components/responses/303seeOther'
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-consumer
        - resource-entitlements
  /consumer/risk/v1/entitlements/user/{id}:
    delete:
      description: Deletes an existing entitlement on the user level.
      operationId: delete-consumer-risk-entitlements-user-by-id
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - description: The ID of the entitlement to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
      tags:
        - context-risk
        - party-consumer
        - resource-entitlements
    get:
      description: Gets an existing entitlement on the user level.
      operationId: get-consumer-risk-entitlements-user-by-id
      parameters:
        - description: The ID of the entitlement to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userEntitlementWithId'
          description: Successfully retrieved the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
      tags:
        - context-risk
        - party-consumer
        - resource-entitlements
    patch:
      description: Updates an existing entitlement on the user level.
      operationId: patch-consumer-risk-entitlements-user-by-id
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - description: The ID of the entitlement to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              modifyRestrictionsAndLimits:
                description: Update the name and add a limit on an entitlement.
                value:
                  - op: replace
                    path: name
                    value: Transfer Limits for the User
                  - op: add
                    path: /limitGroups/-
                    value:
                      limits:
                        - conditions:
                            and:
                              - name: transfer.type
                                operator: in
                                values:
                                  - PPD
                          period: yearly
                          rules:
                            - aggregator: sum
                              amount:
                                currency: USD
                                value: 100000
                              name: amount.value
                      scheme: transfer
            schema:
              $ref: '#/components/schemas/jsonPatchDocument'
          application/merge-patch+json:
            examples:
              modifyRestrictionsAndLimits:
                description: Update the name and add a limit on an entitlement.
                value:
                  limitGroups:
                    - limits:
                        - conditions:
                            and:
                              - name: transfer.type
                                operator: in
                                values:
                                  - PPD
                          period: yearly
                          rules:
                            - aggregator: sum
                              amount:
                                currency: USD
                                value: 100000
                              name: amount.value
                      scheme: transfer
                  name: Transfer Limits for the User
            schema:
              $ref: '#/components/schemas/entitlementPatch'
      responses:
        '204':
          description: Successfully updated the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-consumer
        - resource-entitlements
  /provider/risk/v1/entitlements/composite:
    get:
      description: Gets a composite entitlement on either the segment or user level.
      operationId: get-provider-risk-entitlements-composite
      parameters:
        - description: The path to which the composite entitlement applies.
          example: /consumer/banking/vi/transfers
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: The method (HTTP verb) to which the composite entitlement applies.
          example: POST
          in: query
          name: method
          required: true
          schema:
            $ref: '#/components/schemas/method'
        - description: The scope of the composite entitlement.
          example: user
          in: query
          name: scope
          required: true
          schema:
            enum:
              - segment
              - user
            type: string
        - $ref: '#/components/parameters/segmentId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/compositeEntitlement'
                type: array
          description: Successfully retrieved the list of entitlements.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
      x-proxy-name: Endpoints
  /provider/risk/v1/entitlements/endpoints:
    post:
      description: Parses an OpenAPI schema file and finds distinct combinations of HTTP methods/verbs and routes and turns them into endpoint catalog entries. This endpoint can be called multiple times and will keep adding entries, this is so it's possible to support multiple schema files like `/swagger/v1/swagger.json`, `/swagger/v2/swagger.json` etc. Just make sure the same `version` parameter is passed for each call so they can later all be promoted together.
      operationId: post-provider-risk-entitlements-endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endpointCatalogEntrySchema'
      responses:
        '202':
          description: Successfully received the uploaded OpenAPI spec file and parsed it.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
      x-proxy-name: Endpoints Promote
  /provider/risk/v1/entitlements/endpoints/promote:
    post:
      description: 'Promotes endpoint catalog entries matching the `service` and `version` parameters supplied setting `active: true`. After promoting the new entires it will delete all old entries matching the `service` parameter supplied but not matching the `version` parameter supplied.'
      operationId: post-provider-risk-entitlements-endpoints-promote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endpointCatalogEntryBase'
      responses:
        '204':
          description: Successfully promoted the endpoint catalog entries.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
  /provider/risk/v1/entitlements/system:
    get:
      description: Gets all existing entitlements on the system level.
      operationId: get-provider-risk-entitlements-system
      parameters:
        - description: An optional OData (https://www.odata.org/odata-services/) query for searching/filtering entitlements.
          examples:
            allowFilter:
              value: allow eq true
            methodFilter:
              value: method eq POST
            nameContainsFilter:
              value: contains(name, 'XYZ Corp')
            nameEndsWithFilter:
              value: endswith(name, Custom Entitlement)
            nameExactMatchFilter:
              value: id eq XYZ Corp Custom Entitlement
            nameStartsWithFilter:
              value: startswith(name, 'XYZ Corp')
            routeContainsFilter:
              value: contains(route, transfer)
            routeEndsWithFilter:
              value: endswith(route, /transfers)
            routeExactMatchFilter:
              value: route eq /consumer/banking/v1/transfers
            routeStartsWithFilter:
              value: startswith(route, /consumer/banking)
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to skip specified number (n) of entries from the collection of entitlements and selecting only the remaining entries (starting with entry n+1). If a value less than zero is specified, the URI would be considered malformed.
          example: 10
          in: query
          name: $skip
          required: false
          schema:
            default: 0
            type: integer
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to select only a subset (first n) of entitlement entries from the collection of entitlements. If a value less than zero is specified, the URI would be considered malformed.
          example: 25
          in: query
          name: $top
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/systemEntitlementWithId'
                type: array
          description: Successfully retrieved the list of entitlements.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
      x-proxy-name: System Entitlement
    post:
      description: Adds an entitlement on the system level.
      operationId: post-provider-risk-entitlements-system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/systemEntitlement'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/systemEntitlementWithId'
          description: Successfully created the entitlement.
        '303':
          $ref: '#/components/responses/303seeOther'
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
  /provider/risk/v1/entitlements/system/{id}:
    delete:
      description: Deletes an existing entitlement on the system level.
      operationId: delete-provider-risk-entitlements-system-by-id
      parameters:
        - description: The ID of the entitlement to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
      x-proxy-name: Get Entitlements
    get:
      description: Gets an existing entitlement on the system level.
      operationId: get-provider-risk-entitlements-system-by-id
      parameters:
        - description: The ID of the entitlement to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/systemEntitlementWithId'
          description: Successfully retrieved the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
    patch:
      description: Updates an existing entitlement on the system level.
      operationId: patch-provider-risk-entitlements-system-by-id
      parameters:
        - description: The ID of the entitlement to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              modifyRestrictionsAndLimits:
                description: Update the name and add a limit on an entitlement.
                value:
                  - op: replace
                    path: name
                    value: Transfer Limits for the System
                  - op: add
                    path: /limitGroups/-
                    value:
                      limits:
                        - conditions:
                            and:
                              - name: transfer.type
                                operator: in
                                values:
                                  - PPD
                          period: yearly
                          rules:
                            - aggregator: sum
                              amount:
                                currency: USD
                                value: 100000
                              name: amount.value
                      scheme: transfer
            schema:
              $ref: '#/components/schemas/jsonPatchDocument'
          application/merge-patch+json:
            examples:
              modifyRestrictionsAndLimits:
                description: Update the name and add a limit on an entitlement.
                value:
                  limitGroups:
                    - limits:
                        - conditions:
                            and:
                              - name: transfer.type
                                operator: in
                                values:
                                  - PPD
                          period: yearly
                          rules:
                            - aggregator: sum
                              amount:
                                currency: USD
                                value: 100000
                              name: amount.value
                      scheme: transfer
                  name: Transfer Limits for the System
            schema:
              $ref: '#/components/schemas/entitlementPatch'
      responses:
        '204':
          description: Successfully updated the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
  /provider/risk/v1/entitlements/tenant:
    get:
      description: Gets all existing entitlements on the tenant level.
      operationId: get-provider-risk-entitlements-tenant
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - description: An optional OData (https://www.odata.org/odata-services/) query for searching/filtering entitlements.
          examples:
            allowFilter:
              value: allow eq true
            methodFilter:
              value: method eq POST
            nameContainsFilter:
              value: contains(name, 'XYZ Corp')
            nameEndsWithFilter:
              value: endswith(name, Custom Entitlement)
            nameExactMatchFilter:
              value: id eq XYZ Corp Custom Entitlement
            nameStartsWithFilter:
              value: startswith(name, 'XYZ Corp')
            routeContainsFilter:
              value: contains(route, transfer)
            routeEndsWithFilter:
              value: endswith(route, /transfers)
            routeExactMatchFilter:
              value: route eq /consumer/banking/v1/transfers
            routeStartsWithFilter:
              value: startswith(route, /consumer/banking)
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to skip specified number (n) of entries from the collection of entitlements and selecting only the remaining entries (starting with entry n+1). If a value less than zero is specified, the URI would be considered malformed.
          example: 10
          in: query
          name: $skip
          required: false
          schema:
            default: 0
            type: integer
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to select only a subset (first n) of entitlement entries from the collection of entitlements. If a value less than zero is specified, the URI would be considered malformed.
          example: 25
          in: query
          name: $top
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tenantEntitlementWithId'
                type: array
          description: Successfully retrieved the list of entitlements.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
      x-proxy-name: Tenant Entitlement
    post:
      description: Adds an entitlement on the tenant level.
      operationId: post-provider-risk-entitlements-tenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tenantEntitlement'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenantEntitlementWithId'
          description: Successfully created the entitlement.
        '303':
          $ref: '#/components/responses/303seeOther'
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
  /provider/risk/v1/entitlements/tenant/{id}:
    delete:
      description: Deletes an existing entitlement on the tenant level.
      operationId: delete-provider-risk-entitlements-tenant-by-id
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - description: The ID of the entitlement to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
    get:
      description: Gets an existing entitlement on the tenant level.
      operationId: get-provider-risk-entitlements-tenant-by-id
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - description: The ID of the entitlement to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenantEntitlementWithId'
          description: Successfully retrieved the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
    patch:
      description: Updates an existing entitlement on the tenant level.
      operationId: patch-provider-risk-entitlements-tenant-by-id
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - description: The ID of the entitlement to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              modifyRestrictionsAndLimits:
                description: Update the name and add a limit on an entitlement.
                value:
                  - op: replace
                    path: name
                    value: Transfer Limits for the Tenant
                  - op: add
                    path: /limitGroups/-
                    value:
                      limits:
                        - conditions:
                            and:
                              - name: transfer.type
                                operator: in
                                values:
                                  - PPD
                          period: yearly
                          rules:
                            - aggregator: sum
                              amount:
                                currency: USD
                                value: 100000
                              name: amount.value
                      scheme: transfer
            schema:
              $ref: '#/components/schemas/jsonPatchDocument'
          application/merge-patch+json:
            examples:
              modifyRestrictionsAndLimits:
                description: Update the name and add a limit on an entitlement.
                value:
                  limitGroups:
                    - limits:
                        - conditions:
                            and:
                              - name: transfer.type
                                operator: in
                                values:
                                  - PPD
                          period: yearly
                          rules:
                            - aggregator: sum
                              amount:
                                currency: USD
                                value: 100000
                              name: amount.value
                      scheme: transfer
                  name: Transfer Limits for the Tenant
            schema:
              $ref: '#/components/schemas/entitlementPatch'
      responses:
        '204':
          description: Successfully updated the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-provider
        - resource-entitlements
  /tenant/risk/v1/entitlements/organization:
    get:
      description: Gets all existing entitlements on the organization level.
      operationId: get-tenant-risk-entitlements-organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - description: The type of entitlement. `entitlement` for regular entitlement, and `entitlementSetMember` for entitlements that are part of an entitlement set.
          example: entitlement
          in: query
          name: type
          required: true
          schema:
            enum:
              - entitlement
              - entitlementSetMember
            type: string
        - description: An optional OData (https://www.odata.org/odata-services/) query for searching/filtering entitlements.
          examples:
            allowFilter:
              value: allow eq true
            methodFilter:
              value: method eq POST
            nameContainsFilter:
              value: contains(name, 'XYZ Corp')
            nameEndsWithFilter:
              value: endswith(name, Custom Entitlement)
            nameExactMatchFilter:
              value: id eq XYZ Corp Custom Entitlement
            nameStartsWithFilter:
              value: startswith(name, 'XYZ Corp')
            routeContainsFilter:
              value: contains(route, transfer)
            routeEndsWithFilter:
              value: endswith(route, /transfers)
            routeExactMatchFilter:
              value: route eq /consumer/banking/v1/transfers
            routeStartsWithFilter:
              value: startswith(route, /consumer/banking)
            typeFilter:
              value: type eq entitlementSetMember
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to skip specified number (n) of entries from the collection of entitlements and selecting only the remaining entries (starting with entry n+1). If a value less than zero is specified, the URI would be considered malformed.
          example: 10
          in: query
          name: $skip
          required: false
          schema:
            default: 0
            type: integer
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to select only a subset (first n) of entitlement entries from the collection of entitlements. If a value less than zero is specified, the URI would be considered malformed.
          example: 25
          in: query
          name: $top
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/organizationEntitlementWithId'
                type: array
          description: Successfully retrieved the list of entitlements.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-tenant
        - resource-entitlements
      x-proxy-name: Organization Entitlement 
    post:
      description: Adds an entitlement on the organization level.
      operationId: post-tenant-risk-entitlements-organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizationEntitlement'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organizationEntitlementWithId'
          description: Successfully created the entitlement.
        '303':
          $ref: '#/components/responses/303seeOther'
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-tenant
        - resource-entitlements
  /tenant/risk/v1/entitlements/organization/{id}:
    delete:
      description: Deletes an existing entitlement on the organization level.
      operationId: delete-tenant-risk-entitlements-organization-by-id
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - description: The ID of the entitlement to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
      tags:
        - context-risk
        - party-tenant
        - resource-entitlements
    get:
      description: Gets an existing entitlement on the organization level.
      operationId: get-tenant-risk-entitlements-organization-by-id
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - description: The ID of the entitlement to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organizationEntitlementWithId'
          description: Successfully retrieved the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
      tags:
        - context-risk
        - party-tenant
        - resource-entitlements
    patch:
      description: Updates an existing entitlement on the organization level.
      operationId: patch-tenant-risk-entitlements-organization-by-id
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - description: The ID of the entitlement to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              modifyRestrictionsAndLimits:
                description: Update the name and add a limit on an entitlement.
                value:
                  - op: replace
                    path: name
                    value: Transfer Limits for the Organization
                  - op: add
                    path: /limitGroups/-
                    value:
                      limits:
                        - conditions:
                            and:
                              - name: transfer.type
                                operator: in
                                values:
                                  - PPD
                          period: yearly
                          rules:
                            - aggregator: sum
                              amount:
                                currency: USD
                                value: 100000
                              name: amount.value
                      scheme: transfer
            schema:
              $ref: '#/components/schemas/jsonPatchDocument'
          application/merge-patch+json:
            examples:
              modifyRestrictionsAndLimits:
                description: Update the name and add a limit on an entitlement.
                value:
                  limitGroups:
                    - limits:
                        - conditions:
                            and:
                              - name: transfer.type
                                operator: in
                                values:
                                  - PPD
                          period: yearly
                          rules:
                            - aggregator: sum
                              amount:
                                currency: USD
                                value: 100000
                              name: amount.value
                      scheme: transfer
                  name: Transfer Limits for the Organization
            schema:
              $ref: '#/components/schemas/entitlementPatch'
      responses:
        '204':
          description: Successfully updated the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-tenant
        - resource-entitlements
  /tenant/risk/v1/entitlements/segment:
    get:
      description: Gets all existing entitlements on the segment level.
      operationId: get-tenant-risk-entitlements-segment
      parameters:
        - $ref: '#/components/parameters/segmentId'
        - description: An optional OData (https://www.odata.org/odata-services/) query for searching/filtering entitlements.
          examples:
            allowFilter:
              value: allow eq true
            methodFilter:
              value: method eq POST
            nameContainsFilter:
              value: contains(name, 'XYZ Corp')
            nameEndsWithFilter:
              value: endswith(name, Custom Entitlement)
            nameExactMatchFilter:
              value: id eq XYZ Corp Custom Entitlement
            nameStartsWithFilter:
              value: startswith(name, 'XYZ Corp')
            routeContainsFilter:
              value: contains(route, transfer)
            routeEndsWithFilter:
              value: endswith(route, /transfers)
            routeExactMatchFilter:
              value: route eq /consumer/banking/v1/transfers
            routeStartsWithFilter:
              value: startswith(route, /consumer/banking)
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to skip specified number (n) of entries from the collection of entitlements and selecting only the remaining entries (starting with entry n+1). If a value less than zero is specified, the URI would be considered malformed.
          example: 10
          in: query
          name: $skip
          required: false
          schema:
            default: 0
            type: integer
        - description: An optional OData (https://www.odata.org/odata-services/) parameter to select only a subset (first n) of entitlement entries from the collection of entitlements. If a value less than zero is specified, the URI would be considered malformed.
          example: 25
          in: query
          name: $top
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/segmentEntitlementWithId'
                type: array
          description: Successfully retrieved the list of entitlements.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-tenant
        - resource-entitlements
      x-proxy-name: Entitlement Segment
    post:
      description: Adds an entitlement on the segment level.
      operationId: post-tenant-risk-entitlements-segment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/segmentEntitlement'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/segmentEntitlementWithId'
          description: Successfully created the entitlement.
        '303':
          $ref: '#/components/responses/303seeOther'
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-tenant
        - resource-entitlements
  /tenant/risk/v1/entitlements/segment/{id}:
    delete:
      description: Deletes an existing entitlement on the segment level.
      operationId: delete-tenant-risk-entitlements-segment-by-id
      parameters:
        - description: The ID of the entitlement to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
      tags:
        - context-risk
        - party-tenant
        - resource-entitlements
    get:
      description: Gets an existing entitlement on the segment level.
      operationId: get-tenant-risk-entitlements-segment-by-id
      parameters:
        - description: The ID of the entitlement to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/segmentEntitlementWithId'
          description: Successfully retrieved the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
      tags:
        - context-risk
        - party-tenant
        - resource-entitlements
    patch:
      description: Updates an existing entitlement on the segment level.
      operationId: patch-tenant-risk-entitlements-segment-by-id
      parameters:
        - description: The ID of the entitlement to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              modifyRestrictionsAndLimits:
                description: Update the name and add a limit on an entitlement.
                value:
                  - op: replace
                    path: name
                    value: Transfer Limits for the Segment
                  - op: add
                    path: /limitGroups/-
                    value:
                      limits:
                        - conditions:
                            and:
                              - name: transfer.type
                                operator: in
                                values:
                                  - PPD
                          period: yearly
                          rules:
                            - aggregator: sum
                              amount:
                                currency: USD
                                value: 100000
                              name: amount.value
                      scheme: transfer
            schema:
              $ref: '#/components/schemas/jsonPatchDocument'
          application/merge-patch+json:
            examples:
              modifyRestrictionsAndLimits:
                description: Update the name and add a limit on an entitlement.
                value:
                  limitGroups:
                    - limits:
                        - conditions:
                            and:
                              - name: transfer.type
                                operator: in
                                values:
                                  - PPD
                          period: yearly
                          rules:
                            - aggregator: sum
                              amount:
                                currency: USD
                                value: 100000
                              name: amount.value
                      scheme: transfer
                  name: Transfer Limits for the Segment
            schema:
              $ref: '#/components/schemas/entitlementPatch'
      responses:
        '204':
          description: Successfully updated the entitlement.
        '400':
          $ref: '#/components/responses/400badRequest'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          $ref: '#/components/responses/404notFound'
        '422':
          $ref: '#/components/responses/422unprocessableEntity'
      tags:
        - context-risk
        - party-tenant
        - resource-entitlements
security:
  - bearerAuth: []
servers:
  - description: Fiserv API.
    url: https://api.fiserv.com
tags:
  - description: Risk bounded context.
    name: context-risk
  - description: Consumer/client application operations.
    name: party-consumer
  - description: Service provider operations.
    name: party-provider
  - description: Tenant-scoped operations.
    name: party-tenant
  - description: Entitlements and authorization.
    name: resource-entitlements
x-apigee-proxy:
  defaultFaultRule:
    alwaysEnforce: true
    steps:
      - name: Response-Header-Update
  postflow:
    response:
      - name: Response-Header-Update
  preflow:
    request:
      - name: Request-Authentication-Verification
      - name: Request-Header-Update
